package com.freeSite.business.concretes;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.PropertyMap;
import org.springframework.stereotype.Service;

import com.freeSite.business.abstracts.JobSeekerService;
import com.freeSite.business.dtos.requests.CreateRequests.CreateJobSeekerRequest;
import com.freeSite.business.dtos.responses.GetAllJobSeekerResponse;
import com.freeSite.core.mappers.ModelMapperService;
import com.freeSite.core.results.DataResult;
import com.freeSite.core.results.Result;
import com.freeSite.core.results.SuccessDataResult;
import com.freeSite.core.results.SuccessResult;
import com.freeSite.dataAccess.abstracts.JobSeekerRepository;
import com.freeSite.entities.JobSeeker;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class JobSeekerManager implements JobSeekerService{

	private final JobSeekerRepository jobSeekerRepository;
	private final ModelMapperService modelMapper;

	@Override
	public Result add(CreateJobSeekerRequest jobSeekerRequest) {
		PropertyMap<CreateJobSeekerRequest, JobSeeker> customMap = new PropertyMap<CreateJobSeekerRequest,JobSeeker>(){

			@Override
			protected void configure() {
		        LocalDate birthDate = LocalDate.parse(source.getBirthYear(), DateTimeFormatter.ofPattern("dd-MM-yyyy"));
		        
				map().setBirthYear(birthDate);
			}
			
		}
		JobSeeker jobSeeker = this.modelMapper.forRequest().map(jobSeekerRequest, JobSeeker.class);
		this.jobSeekerRepository.save(jobSeeker);
		return new SuccessResult("Veri eklendi");
	}

	@Override
	public DataResult<List<GetAllJobSeekerResponse>> getAll() {
		List<JobSeeker> jobSeekers = this.jobSeekerRepository.findAll();
		List<GetAllJobSeekerResponse> responses = jobSeekers.stream()
				.map(jobSeeker -> this.modelMapper.forResponse().map(jobSeeker, GetAllJobSeekerResponse.class)).collect(Collectors.toList());
		return new SuccessDataResult<List<GetAllJobSeekerResponse>>(responses, "Data Listelendi");
	}

}

