package com.freeSite.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.freeSite.business.abstracts.SchoolService;
import com.freeSite.business.dtos.requests.CreateRequests.CreateSchoolRequest;
import com.freeSite.business.dtos.responses.GetAllEmployerResponse;
import com.freeSite.business.dtos.responses.GetAllSchoolResponse;
import com.freeSite.core.mappers.ModelMapperService;
import com.freeSite.core.results.DataResult;
import com.freeSite.core.results.Result;
import com.freeSite.core.results.SuccessDataResult;
import com.freeSite.core.results.SuccessResult;
import com.freeSite.dataAccess.abstracts.SchoolRepository;
import com.freeSite.entities.School;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class SchoolManager implements SchoolService{

	private SchoolRepository schoolRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public Result add(CreateSchoolRequest schoolRequest) throws Exception {
		School school = this.modelMapperService.forRequest().map(schoolRequest, School.class);
		this.schoolRepository.save(school);
		return new SuccessResult("Data Eklendi");
	}

	@Override
	public DataResult<List<GetAllSchoolResponse>> getAll() {
		List<School> schools = this.schoolRepository.findAll();
		List<GetAllSchoolResponse> responses = schools.stream()
				.map(school -> this.modelMapper.forResponse().map(school, GetAllSchoolResponse.class))
				.collect(Collectors.toList());

		return new SuccessDataResult<List<GetAllEmployerResponse>>(responses, "Data Listelendi");
	
}
