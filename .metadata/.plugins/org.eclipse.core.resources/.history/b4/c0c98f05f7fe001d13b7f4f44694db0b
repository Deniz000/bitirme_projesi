package com.freeSite.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.freeSite.business.abstracts.EmployerService;
import com.freeSite.business.dtos.requests.CreateRequests.CreateEmployerRequest;
import com.freeSite.business.dtos.requests.DeleteRequests.DeleteEmployerRequest;
import com.freeSite.business.dtos.requests.UpdateRequests.UpdateEmployerRequest;
import com.freeSite.business.dtos.responses.GetAllEmployerResponse;
import com.freeSite.business.dtos.responses.GetAllJobSeekerResponse;
import com.freeSite.core.results.DataResult;
import com.freeSite.core.results.Result;
import com.freeSite.core.results.SuccessDataResult;
import com.freeSite.dataAccess.abstracts.EmployerRepository;
import com.freeSite.entities.Employer;

import lombok.AllArgsConstructor;

@Service 
@AllArgsConstructor
public class EmployerManager implements EmployerService{

	private EmployerRepository employerRepository;
	
	@Override
	public Result add(CreateEmployerRequest employerRequest) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Result update(UpdateEmployerRequest employerjobRequest) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Result deleteById(DeleteEmployerRequest employerRequest) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public DataResult<List<GetAllEmployerResponse>> getAll() {
		List<Employer> employers = this.employerRepository.findAll();
		List<GetAllEmployerResponse> responses = jobSeekers.stream()
				.map(jobSeeker -> this.modelMapper.forResponse().map(jobSeeker, GetAllJobSeekerResponse.class)).collect(Collectors.toList());
		return new SuccessDataResult<List<GetAllJobSeekerResponse>>(responses, "Data Listelendi");
	}

}
